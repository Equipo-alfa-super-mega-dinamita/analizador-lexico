//Falta : funciones
//Declaracion de variables y constantes
VARCONST: TYPE {tk_id} ARRAY ASSIG CON VCEND;
TYPE: {tk_var}
   | {tk_const};
//En caso que sea un arreglo [a,...,b]
ARRAY: {tk_lbracket} ARDAT VAL
     | ¿;
VAL: {tk_comma} ARDAT VAL
   | {tk_colon} ARDAT {tk_rbracket}
   | {tk_rbracket};
ARDAT: {tk_num_int_dec}
   | IDENT
   | {tk_num_int_oct}
   | {tk_num_int_hex};
//En caso que se haga una asignacion "="
ASSIG: B
     | ¿;
//En caso que se sigan declarando identificadores
CON: {tk_comma} {tk_id} ARRAY ASSIG CON
   | {tk_colon} {tk_id} ARRAY ASSIG CON
   | ¿;
//El final de la declaracion
VCEND: {tk_colon} DAT SEMICOLON;
DAT: {tk_int}
   | {tk_bool}
   | {tk_real}
   | {tk_char}
   | {tk_string}
   | {tk_file}
   | {tk_ptr};
SEMICOLON: {tk_semicolon}
   | ¿;
// Manejo de las asignaciones especiales. //Pensar en caso de una id.fun()
ASSIGNMENTS:  IDENT AUG;
AUG: A
 | B
 | C
 | E
 | G
 | I;

//Assignment operators
//swap
A: {tk_swap} IDENT;
// assign
B: {tk_assign} B1;
B1: K;
// int/real
C: {tk_aug_plus} D
 | {tk_aug_minus} D
 | {tk_aug_expon} D
 | {tk_aug_div} D
 | {tk_aug_aster} D;
D: K;

//Assignment bool or and
E: {tk_aug_or} F
 | {tk_aug_and} F;
F: K;

//Assignment concat
G : {tk_aug_concat} H;
H : K;

//Assignment shift
I: {tk_aug_lshift} J
 | {tk_aug_rshift} J
J: K;

//////////Operators
K: L KP;
KP: {tk_or} L KP
   | {tk_xor} L KP
   | ¿;
L  | O LP;
LP:  {tk_and} O LP
   | ¿;

//real str
O: Q OP;
OP: {tk_le} Q OP
  | {tk_ge} Q OP
  | {tk_lt} Q OP
  | {tk_gt} Q OP
  | {tk_ne} Q OP
  | {tk_eq} Q OP
  | ¿;

//int
Q: S QP;
QP: {tk_rshift} S QP
  | {tk_lshift} S QP
  | ¿;

S: U SP;
SP: {tk_concat} U SP
  | ¿;

// int real
U: V UP;
UP: {tk_minus} V UP
  | {tk_plus} V UP
  | ¿;
  
V: W VP;
VP:{tk_mod} W VP
  | {tk_remdr} W VP
  | {tk_div} W VP
  | {tk_aster} W VP
  | ¿;
W: Y {tk_expon} W
 | Y;
 ////////////
Y: {tk_qmark} Y
  | {tk_addr} Y
  | {tk_decr} Y
  | {tk_incr} Y
  | {tk_minus} Y
  | {tk_plus}  Y
  | {tk_not} Y
  | Z;
Z: A1 ZP;
ZP: {tk_hat} ZP;
  | {tk_decr} ZP
  | {tk_incr} ZP
  | ¿;

A1: IDENT
    | {tk_num_int_oct}
    | {tk_num_int_dec}
    | {tk_num_int_hex}
    | {tk_true}
    | {tk_false}
    | {tk_cadena}
    | {tk_caracter}
    | {tk_num_real}
    | {tk_lparem} K {tk_rparem};

//Identificadores dado que puede ser id1.id2.id3.fun()
IDENT: {tk_id} NEXTIDENT;
NEXTIDENT: {tk_period} {tk_id} NEXTIDENT
         | FUNC
         | ¿;

//se toma que se tiene un identidicador o palabra reservada y lo siguiente solo se encarga del parentesis (a,...,b)
FUNC: {tk_lparen} K NEXTF;
NEXTF: {tk_comma} K NEXTF
     | {tk_lparen};